	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_fmod
_fmod:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	de, (ix + 12)
	ld	c, (ix + 15)
	push	bc
	push	de
	ld	e, a
	push	de
	push	hl
	call	_fmodf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_fmodf
_fmodf:
	ld	hl, -8
	call	__frameset
	ld	hl, (ix + 12)
	ld	e, (ix + 15)
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jq	z, BB1_1
	ld	l, 0
	jq	BB1_3
BB1_1:
	ld	l, 1
BB1_3:
	bit	0, l
	jq	z, BB1_4
	jq	BB1_13
BB1_4:
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	hl, (ix + 12)
	ld	e, (ix + 15)
	call	__fdiv
	ld	l, a
	pea	ix + -4
	push	hl
	push	bc
	call	_modff
	pop	hl
	pop	hl
	pop	hl
	ld	bc, (ix + -4)
	ld	a, (ix + -1)
	ld	hl, (ix + 12)
	ld	e, (ix + 15)
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	call	__fsub
	ld	(ix + -8), bc
	ld	(ix + -5), a
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	bc, 0
	xor	a, a
	ld	iyh, a
	call	__fcmp
	ld	d, 1
	ld	a, 0
	ld	iyl, d
	jq	m, BB1_6
	ld	iyl, a
BB1_6:
	or	a, a
	sbc	hl, hl
	ld	e, iyh
	ld	bc, (ix + -8)
	ld	a, (ix + -5)
	call	__fcmp
	jq	m, BB1_8
	ld	d, 0
BB1_8:
	ld	a, iyl
	and	a, d
	ld	l, a
	ld	de, (ix + -8)
	push	de
	pop	bc
	ld	a, (ix + -5)
	call	__fneg
	bit	0, l
	jq	nz, BB1_10
	push	de
	pop	bc
BB1_10:
	bit	0, l
	jq	nz, BB1_12
	ld	a, (ix + -5)
BB1_12:
BB1_13:
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__fneg
	extern	_modff
	extern	__fdiv
	extern	__fcmp
	extern	__frameset0
	extern	__fsub
	extern	__fmul
