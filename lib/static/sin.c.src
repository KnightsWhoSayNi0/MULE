	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_sin
_sin:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	e, a
	push	de
	push	hl
	call	_sinf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_sinf
_sinf:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	a, (ix + 9)
	ld	de, 0
	push	de
	ld	e, a
	push	de
	push	hl
	call	_sinus
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_sinus
_sinus:
	ld	hl, -23
	call	__frameset
	ld	hl, (ix + 6)
	ld	e, (ix + 9)
	ld	iy, (ix + 12)
	ld	bc, 0
	xor	a, a
	call	__fcmp
	jq	m, BB2_1
	ld	l, 0
	jq	BB2_3
BB2_1:
	ld	l, 1
BB2_3:
	ld	bc, (ix + 6)
	ld	h, e
	ld	a, e
	call	__fneg
	ld	de, 2
	add	iy, de
	ld	(ix + -14), iy
	bit	0, l
	jq	nz, BB2_5
	ld	bc, (ix + 6)
BB2_5:
	bit	0, l
	jq	nz, BB2_7
	ld	a, h
BB2_7:
	ld	e, 63
	bit	0, l
	ld	iy, (ix + 12)
	jq	nz, BB2_9
	ld	(ix + -14), iy
BB2_9:
	ld	hl, 2292099
	call	__fmul
	ld	iyl, a
	ld	hl, -2048
	ld	e, 70
	ld	(ix + -17), bc
	ld	(ix + -11), iy
	call	__fcmp
	jq	p, BB2_11
	lea	hl, ix + -4
	ld	(ix + -20), hl
	push	hl
	ld	hl, (ix + -11)
	push	hl
	ld	hl, (ix + -17)
	push	hl
	call	_modff
	ld	(ix + -11), hl
	ld	(ix + -17), e
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -4)
	ld	(ix + -23), hl
	ld	iy, (ix + -20)
	lea	hl, iy + 3
	ld	(ix + -20), hl
	ld	e, (hl)
	ld	bc, (ix + -14)
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	hl
	ld	d, a
	ld	bc, (ix + -23)
	ld	a, e
	ld	e, d
	call	__fadd
	ld	(ix + -4), bc
	ld	hl, (ix + -20)
	ld	(hl), a
	ld	hl, -8388608
	ld	e, 62
	call	__fmul
	ld	l, a
	pea	ix + -8
	push	hl
	push	bc
	call	_modff
	pop	hl
	pop	hl
	pop	hl
	ld	iy, (ix + -4)
	ld	d, (ix + -1)
	ld	bc, (ix + -8)
	ld	a, (ix + -5)
	ld	hl, -8388608
	ld	e, 64
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	iy, (ix + -11)
	ld	a, d
	call	__fsub
	call	__ftol
	jq	BB2_12
BB2_11:
	ld	bc, (ix + -17)
	ld	hl, (ix + -11)
	ld	a, l
	call	__ftol
	ld	(ix + -20), bc
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	bc
	pop	iy
	ld	e, a
	ld	bc, (ix + -17)
	ld	hl, (ix + -11)
	ld	a, l
	lea	hl, iy + 0
	call	__fsub
	push	bc
	pop	iy
	ld	(ix + -17), a
	ld	hl, (ix + -14)
	ld	de, (ix + -20)
	add	hl, de
	ld	bc, 3
	call	__iand
	push	hl
	pop	bc
BB2_12:
	ld	(ix + -14), bc
	push	bc
	pop	hl
	ld	bc, 1
	call	__iand
	ld	e, 1
	ld	a, l
	xor	a, e
	ld	d, a
	ld	bc, -8388608
	ld	a, 63
	ld	(ix + -11), iy
	lea	hl, iy + 0
	ld	e, (ix + -17)
	ld	iyl, e
	call	__fsub
	bit	0, d
	jq	nz, BB2_14
	ld	(ix + -11), bc
BB2_14:
	bit	0, d
	jq	nz, BB2_16
	ld	iyl, a
BB2_16:
	ld	de, 2
	ld	hl, (ix + -14)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB2_17
	ld	l, 0
	jq	BB2_19
BB2_17:
	ld	l, 1
BB2_19:
	ld	de, (ix + -11)
	push	de
	pop	bc
	ld	a, iyl
	call	__fneg
	bit	0, l
	jq	nz, BB2_21
	push	de
	pop	bc
BB2_21:
	bit	0, l
	jq	nz, BB2_23
	ld	a, iyl
BB2_23:
	ld	(ix + -11), bc
	ld	(ix + -14), a
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	hl, 1177606
	ld	e, 67
	call	__fmul
	ld	hl, 5790999
	ld	e, -58
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	a, d
	call	__fmul
	ld	hl, -2693918
	ld	e, 72
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	a, d
	call	__fmul
	ld	hl, -6891400
	ld	e, -54
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	a, d
	call	__fmul
	ld	hl, 5190233
	ld	e, 75
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix + -11)
	ld	a, (ix + -14)
	call	__fmul
	ld	(ix + -11), bc
	ld	(ix + -14), a
	lea	bc, iy + 0
	ld	a, d
	ld	hl, 304971
	ld	e, 67
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	a, d
	call	__fmul
	ld	hl, 1301602
	ld	e, 70
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	a, d
	call	__fmul
	ld	hl, -3715481
	ld	e, 72
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	lea	bc, iy + 0
	ld	a, d
	call	__fmul
	ld	hl, 255951
	ld	e, 75
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix + -11)
	ld	a, (ix + -14)
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	__frameset
	extern	__iand
	extern	__fneg
	extern	__fdiv
	extern	__fadd
	extern	_modff
	extern	__ltof
	extern	__fcmp
	extern	__frameset0
	extern	__fmul
	extern	__ftol
	extern	__fsub
