; (c) Copyright 2001-2008 Zilog, Inc.
;-------------------------------------------------------------------------
; Heap allocation routine s_sbrk
; Input:
;                 argument : 24 bit - number of bytes requested
;
; Output:
;       Result:   HL:	 24 bit address of memory allocated 
;		         HL = 0 if no memory available
;		        
; Registers Used:
;       
;-------------------------------------------------------------------------
	assume	adl=1

	public	__s_sbrk
__s_sbrk:
	ld	hl,3
	add	hl,sp
	ld	hl,(hl)	;nbytes
	ld	de,(__sbrkbase)
	add	hl,de
	jr	c,_fail
	
        ; fail  if hl >= sp.
        ; hl is now, or will be, the next un-allocated address = minimal value
        ; for sp that will not corrupt allocated data or that writing to
        ; allocated data may corrupt the stack.
        ; Actually, if hl is anywhere close to sp we're probably in trouble :(
	
        push    hl
        sbc     hl,sp
        pop     hl
	jr	nc,_fail
_ok:
	ex	hl,de
	ld	(__sbrkbase),de
	ret
_fail:
	or	a,a
	sbc	hl,hl
	ret

	extern	__heapbot
	extern	__heaptop

	section	.data
        private	__sbrkbase
__sbrkbase:
	dl	__heapbot
