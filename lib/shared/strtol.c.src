	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_strtol
_strtol:
	ld	hl, -24
	call	__frameset
	ld	iy, (ix + 6)
BB0_1:
	ld	(ix + -6), iy
	ld	(ix + -3), iy
	ld	a, (iy)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_isspace
	ld	iy, (ix + -6)
	pop	de
	inc	iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_1
	ld	hl, (ix + -3)
	ld	a, (hl)
	cp	a, 43
	jq	nz, BB0_4
	ld	(ix + -3), iy
	ld	bc, -1
	push	bc
	pop	hl
	ld	e, 127
	ld	c, e
	ld	a, 1
	ld	de, (ix + 12)
	jq	BB0_6
BB0_4:
	cp	a, 45
	ld	bc, -1
	push	bc
	pop	hl
	ld	e, 127
	ld	c, e
	ld	a, 1
	ld	de, (ix + 12)
	jq	nz, BB0_6
	ld	bc, 0
	push	bc
	pop	hl
	ld	c, -128
	xor	a, a
	ld	(ix + -3), iy
BB0_6:
	ld	(ix + -20), hl
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix + -21), c
	ld	(ix + -8), a
	jq	nz, BB0_10
	ld	iy, (ix + -3)
	ld	a, (iy)
	cp	a, 48
	jq	nz, BB0_15
	ld	a, (iy + 1)
	cp	a, 88
	jq	z, BB0_21
	cp	a, 120
	jq	z, BB0_21
	ld	de, 8
	jq	BB0_22
BB0_10:
	ld	bc, 16
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_22
	ld	hl, (ix + -3)
	push	hl
	pop	de
	ld	a, (hl)
	cp	a, 48
	jq	nz, BB0_21
	push	de
	pop	iy
	ld	a, (iy + 1)
	cp	a, 88
	jq	z, BB0_14
	cp	a, 120
	jq	nz, BB0_21
BB0_14:
	lea	iy, iy + 2
	ld	(ix + -3), iy
BB0_21:
	ld	de, 16
	jq	BB0_22
BB0_15:
	ld	de, 10
BB0_22:
	ld	c, 16
	push	de
	pop	hl
	call	__ishl
	call	__ishrs
	ld	(ix + -17), hl
	or	a, a
	sbc	hl, hl
	xor	a, a
	ld	(ix + -14), de
BB0_23:
	ld	(ix + -6), hl
	ld	(ix + -7), a
	ld	hl, (ix + -3)
	ld	(ix + -11), hl
	ld	a, (hl)
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	l, a
	push	hl
	call	_toupper
	pop	de
	ld	a, l
	cp	a, 65
	call	__setflag
	ld	a, -55
	jq	p, BB0_25
	ld	a, -48
BB0_25:
	add	a, l
	or	a, a
	sbc	hl, hl
	cp	a, 0
	call	__setflag
	ld	iy, (ix + 9)
	jq	m, BB0_32
	ld	l, a
	push	hl
	pop	bc
	ld	de, (ix + -17)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB0_32
	ld	hl, (ix + -14)
	push	hl
	pop	iy
	add	iy, iy
	push	hl
	pop	iy
	sbc	hl, hl
	ld	(ix + -24), hl
	ld	hl, (ix + -6)
	ld	d, (ix + -7)
	ld	e, d
	ld	(ix + -3), bc
	lea	bc, iy + 0
	ld	iy, (ix + -24)
	ld	a, iyl
	call	__lmulu
	xor	a, a
	ld	bc, (ix + -3)
	call	__ladd
	ld	bc, (ix + -6)
	ld	a, d
	call	__lcmpu
	call	__setflag
	ld	a, 1
	jq	p, BB0_29
	ld	a, 0
BB0_29:
	ld	bc, (ix + -11)
	inc	bc
	ld	(ix + -3), bc
	bit	0, a
	ld	a, e
	ld	de, (ix + -14)
	jq	nz, BB0_23
	ld	hl, 5
	ld	(_errno), hl
	ld	bc, (ix + -20)
	ld	d, (ix + -21)
	ld	iy, (ix + 9)
	jq	BB0_33
BB0_32:
	ld	bc, (ix + -6)
	ld	d, (ix + -7)
BB0_33:
	lea	hl, iy + 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_44
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_41
	ld	hl, (ix + -11)
BB0_36:
	ld	a, (hl)
	cp	a, 76
	jq	z, BB0_40
	cp	a, 104
	jq	z, BB0_40
	cp	a, 108
	jq	z, BB0_40
	cp	a, 117
	jq	nz, BB0_43
BB0_40:
	inc	hl
	jq	BB0_36
BB0_41:
	ld	hl, (ix + -11)
BB0_43:
	ld	(iy), hl
BB0_44:
	or	a, a
	sbc	hl, hl
	ld	e, 0
	ld	a, d
	call	__lsub
	ld	a, (ix + -8)
	bit	0, a
	jq	nz, BB0_46
	push	hl
	pop	bc
BB0_46:
	bit	0, a
	jq	nz, BB0_48
	ld	d, e
BB0_48:
	push	bc
	pop	hl
	ld	e, d
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	__setflag
	extern	__Unwind_SjLj_Register
	extern	__Unwind_SjLj_Unregister
	extern	_toupper
	extern	__frameset
	extern	_isspace
	extern	__lmulu
	extern	__lsub
	extern	__lcmpu
	extern	_errno
	extern	__ishrs
	extern	__ishl
	extern	__ladd
